vim.cmd [[:amenu 10.100 PopUp.Code\ Actions <cmd>:lua require('actions-preview').code_actions()<CR>]]
vim.cmd [[:amenu 10.110 PopUp.Breakpoint\ Toggle <cmd>:lua require('persistent-breakpoints.api').toggle_breakpoint()<CR>]]
vim.cmd [[:amenu 10.120 PopUp.-sep1- *]]
vim.cmd [[:amenu 10.130 PopUp.List\ Breakpoints <cmd>:lua require'telescope'.extensions.dap.list_breakpoints()<CR>]]
vim.cmd [[:amenu 10.140 PopUp.-sep2- *]]
vim.cmd [[:amenu 10.150 PopUp.Condition\ Breakpoint <cmd>:popup Condition Breakpoint<CR>]]
vim.cmd [[:amenu 10.160 Condition\ Breakpoint.Condition\ \+\ Breakpoint <cmd>:lua require('persistent-breakpoints.api').set_breakpoint(vim.fn.input('Breakpoint condition: '), vim.fn.input('Hit condition: '), nil)<CR>]]
vim.cmd [[:amenu 10.170 Condition\ Breakpoint.Condition\ \+\ Logpoint <cmd>:lua require('persistent-breakpoints.api').set_breakpoint(vim.fn.input('Breakpoint condition: '), vim.fn.input('Hit condition: '), vim.fn.input('Log point message: '))<CR>]]
vim.cmd [[:amenu 10.180 Condition\ Breakpoint.-sep2_1- *]]
vim.cmd [[:amenu 10.190 Condition\ Breakpoint.Edit\ \+\ Breakpoint <cmd>:lua DAP_edit_breakpoint()<CR>]]
vim.cmd [[:amenu 10.200 PopUp.Clear\ All\ Breakpoints <cmd>:lua require('persistent-breakpoints.api').clear_all_breakpoints()<CR>]]
vim.cmd [[:amenu 10.210 PopUp.-sep3- *]]
